name: Deploy to Hetzner

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # - name: Set up Node.js
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: 18
    #     cache: 'npm'
    
    # - name: Install dependencies
    #   run: npm ci
      
    # - name: Run tests
    #   run: npm test
      
    # - name: Build application
    #   run: npm run build

    # - name: Start server in background
    #   run: npm run start & npx wait-on http://localhost:3000
      
    # - name: Run Lighthouse CI
    #   uses: treosh/lighthouse-ci-action@v9
    #   with:
    #     urls: |
    #       http://localhost:3000
    #     uploadArtifacts: true
    #     artifactName: lighthouse-dvt-test  
    #     temporaryPublicStorage: true


    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container  # Required for cache exports
    - name: Build and Push Docker Image
      run: |
        docker build --platform linux/amd64 -t ${{ env.DOCKER_IMAGE }} .
        docker push ${{ env.DOCKER_IMAGE }}

        
  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no \
            root@${{ secrets.SSH_HOST }} \
            "docker pull ${{ env.DOCKER_IMAGE }} && \
            docker stop nextjs-app || true && \
            docker rm nextjs-app || true && \
            docker run -d \
              --name nextjs-app \
              --restart unless-stopped \
              -p 3000:3000 \
              ${{ env.DOCKER_IMAGE }}"